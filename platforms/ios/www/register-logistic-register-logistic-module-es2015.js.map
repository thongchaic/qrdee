{"version":3,"sources":["./src/app/register-logistic/register-logistic.page.html","./src/app/register-logistic/register-logistic.module.ts","./src/app/register-logistic/register-logistic.page.scss","./src/app/register-logistic/register-logistic.page.ts","./src/app/register-logistic/shared/register-logistic.service.ts","./src/app/shared/services/toast.service.ts"],"names":[],"mappings":"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","file":"register-logistic-register-logistic-module-es2015.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>สมัครเป็นผู้ส่งสินค้า</ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-back-button defaultHref=\\\"login\\\"></ion-back-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n\\n\\n<ion-content>\\n  <ion-card style=\\\"background:#FFFFFF;\\\">\\n    <ion-card-content >\\n       <ion-list>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" ></ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"firstname\\\" placeholder=\\\"ชื่อ\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\"></ion-label>\\n         <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"lastname\\\" placeholder=\\\"นามสกุล\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" ></ion-label>\\n        <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"car_number\\\" placeholder=\\\"เลขทะเบียนรถ\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" ></ion-label>\\n        <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"mobile_number\\\" placeholder=\\\"เบอร์โทร\\\"></ion-input>\\n      </ion-item>\\n      <!-- <ion-item>\\n        <ion-label position=\\\"floating\\\"></ion-label>\\n        <ion-input type=\\\"text\\\" [(ngModel)]=\\\"email\\\" placeholder=\\\"อีเมล์\\\"></ion-input>\\n      </ion-item> -->\\n        <ion-item>\\n        <ion-label position=\\\"floating\\\"></ion-label>\\n        <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"password\\\" placeholder=\\\"รหัสผ่าน\\\"></ion-input>\\n      </ion-item>\\n      <ion-item>\\n        <ion-label position=\\\"floating\\\" ></ion-label>\\n        <ion-input type=\\\"text\\\"  [(ngModel)]=\\\"repassword\\\" placeholder=\\\"รหัสผ่านยืนยัน\\\"></ion-input>\\n      </ion-item>\\n      <br>\\n      <ion-button type=\\\"submit\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"RegisterLlogistic()\\\">ลงทะเบียน</ion-button>\\n </ion-list>\\n</ion-card-content>\\n</ion-card>\\n</ion-content>\\n\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\nimport { RegisterLogisticService } from './shared/register-logistic.service';\nimport { RegisterLogisticPage } from './register-logistic.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterLogisticPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [RegisterLogisticPage],\n   providers: [RegisterLogisticService],\n})\nexport class RegisterLogisticPageModule {}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyLWxvZ2lzdGljL3JlZ2lzdGVyLWxvZ2lzdGljLnBhZ2Uuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { NavController, LoadingController, ToastController } from '@ionic/angular';\nimport { RegisterLogisticService } from './shared/register-logistic.service';\nimport { Router  } from '@angular/router';\nimport { ToastService } from '../shared/services/toast.service';\nimport { UserService } from '../shared/user.service';\n\n\n\n@Component({\n  selector: 'app-register-logistic',\n  templateUrl: './register-logistic.page.html',\n  styleUrls: ['./register-logistic.page.scss'],\n})\nexport class RegisterLogisticPage  {\n\n  password:string='';\n  repassword:string ='';\n  firstname:string='';\n  lastname:string='';\n  car_number:string='';\n  mobile_number:string='';\n  //email:string='';\n\n  constructor(\n   private router: Router,\n   public registerService: RegisterLogisticService,\n    private toastService: ToastService,\n    private user: UserService\n  \t) { }\n\n\n\n\tRegisterLlogistic(){\n\n    console.log(this.password, this.repassword, this.firstname, this.lastname, this.car_number, this.mobile_number);\n    if(this.password != this.repassword){\n      this.toastService.showToast(\"รหัสผ่านไม่ตรงกัน\", 'top');\n      return;\n    }\n    this.registerService.registerlogistic(this.password,this.firstname,this.lastname,this.mobile_number,this.car_number).subscribe(rider => {\n    \n      console.log(rider);\n      this.user.storeUser(rider, 2);\n\n      let member = this.user.getMember();//JSON.parse(localStorage.getItem('member'));\n      if(!member){\n          const member = {\n            id:null,\n            mobile_number:rider.mobile_number,\n            latitude:14.8718084,\n            longitude:103.4962797,\n            firstname:rider.firstname,\n            lastname:rider.lastname\n          }\n          this.user.storeMember(member);\n      }\n\n      //  this.toastService.showToast('ลงทะเบียนสำเร็จแล้ว กรุณาล็อคอิน', 'top');\n        this.router.navigateByUrl('/riders');\n    });\n\n\n\t}\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\nimport { Observable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterLogisticService {\n\n  baseUrl = `${ environment.api_url }`;\n  \n  constructor(private http: HttpClient) \n  { }\n\n\tregisterlogistic(password,firstname,lastname,mobile_number,car_number){\n\t  const body = {\n\t      // username : username,\n\t      password : password,\n\t      firstname : firstname,\n\t      lastname  : lastname,\n\t      car_number : car_number,\n\t      mobile_number : mobile_number\n\t    }\n\t    console.log(body);\n\t  return this.http.post<any>(`https://qrdee.co/api/v2/rider`,body);\n\t}\n\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(\n    private toastController: ToastController\n  ) { }\n\n  async showToast(message: string, position: 'top' | 'bottom' | 'middle') {\n    const toast = await this.toastController.create({\n      message: message,\n      position: position,\n      duration: 1000,\n      color: 'dark'\n    });\n\n    toast.present();\n  }\n  async showLongToast(message: string, position: 'top' | 'bottom' | 'middle') {\n    const toast = await this.toastController.create({\n      message: message,\n      position: position,\n      duration: 30000,\n      color: 'dark'\n    });\n\n    toast.present();\n  }\n\n\n  async showToasts(message: string, position: 'top' | 'bottom' | 'middle') {\n    const toast = await this.toastController.create({\n      message: message,\n      position: position,\n      duration: 1000,\n      color: '#FFFFFF'\n    });\n\n    toast.present();\n  }\n\n\n\n  // hideToast() {\n\n  // }\n}\n"],"sourceRoot":""}