{"version":3,"sources":["./src/app/shared/interceptors/httpclient.interceptor.ts","./src/app/shared/services/alert.service.ts","./src/app/shared/services/qr.service.ts","./src/app/shared/services/toast.service.ts","./src/app/shared/services/transaction.service.ts","./src/app/shared/shared.module.ts"],"names":[],"mappings":"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","file":"default~cart-cart-module~customer-customer-module~logistic-logistic-module~products-products-module~~1c1c48b1-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Storage } from '@ionic/storage';\nimport { IonicStorageModule } from '@ionic/storage';\nimport { \n  HttpInterceptor, \n  HttpRequest, \n  HttpResponse, \n  HttpHandler, \n  HttpEvent, \n  HttpErrorResponse ,\n} from '@angular/common/http';\n\nimport { Observable, throwError } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\n@Injectable() \nexport class HttpClientInterceptor implements HttpInterceptor {\n  access_token:string =''; \n \n  constructor(\n  private storage: Storage\n  ) {\n      localStorage.getItem('access_token');\n      console.log( localStorage.getItem('access_token'));\n      }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler,): Observable<HttpEvent<any>> {   \n     // const token: string = 'Bearer YkVNRDBITDc2TTBFMDFzZldiT2xMa09DQ1BYYUQxMjFjZzVWR3poZ3JWTlVyR2lkNERqbnR6blRXdFFHaVp5SlR6blFVdFZjaTRqTDQ1UnhyMHRjeEs1VnVrdzM3cDFLSUw1bWZtd1J0d1ZPODV5V0hlb3FvZWQxSWJSaGowZEg=';\n      const token: string = 'Bearer ' +localStorage.getItem('access_token');\n     \n    if(token) {    \n      request = request.clone({\n        setHeaders: {\n          'Authorization': token\n        } \n      });\n    }\n    \n    return next.handle(request).pipe(\n      map((event: HttpEvent<any>) => {\n        if(event instanceof HttpResponse) { \n        } \n        return event;\n      }),\n    );\n  }\n}\n ","import { Injectable } from '@angular/core';\nimport { AlertController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertService {\n\n  constructor(\n    private alertController: AlertController\n  ) { }\n\n  async showAlert(options) {\n    const alert = await this.alertController.create({\n      header: options.header,\n      subHeader: options.sub_header,\n      message: options.message,\n      buttons: options.buttons\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QrService {\n\n  baseUrl = `${environment.api_url}/promptpayQRs`;\n\n  constructor(\n    private http: HttpClient,\n    // private barcodeScanner: BarcodeScanner\n  ) { }\n\n  generatePromptPayQRs(transaction) {\n    return this.http.post<any>(this.baseUrl, transaction);\n  }\n\n  // generateQRCode() {\n  //   return this.barcodeScanner.encode(this.barcodeScanner.Encode.TEXT_TYPE, '00020101021129370016A000000677010111011300660000000005802TH530376463048956');\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n\n  constructor(\n    private toastController: ToastController\n  ) { }\n\n  async showToast(message: string, position: 'top' | 'bottom' | 'middle') {\n    const toast = await this.toastController.create({\n      message: message,\n      position: position,\n      duration: 1000,\n      color: 'dark'\n    });\n\n    toast.present();\n  }\n\n\n  async showToasts(message: string, position: 'top' | 'bottom' | 'middle') {\n    const toast = await this.toastController.create({\n      message: message,\n      position: position,\n      duration: 1000,\n      color: '#FFFFFF'\n    });\n\n    toast.present();\n  }\n\n\n\n  // hideToast() {\n\n  // }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransactionService {\n\n  baseUrl = `${environment.api_url}`;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  get(id) {\n    return this.http.get<any>(`${this.baseUrl}/${id}`);\n  }\n////////////////// v2 ///////////////////\n transactionToQR(products, price, store_id){\n\n   const body = {\n     price: price,\n     products: products\n   }\n\n   return this.http.post<any>(`https://qrdee.co/api/v2/trnqr/${store_id}`,body);\n }\n getOrders(store_id){\n    return this.http.get<any>(`https://qrdee.co/api/v2/orders/${store_id}`);\n }\n\n\n\n\n////////////////// v1 ///////////////////\n  // latitude,longitude\n\n  orderProduct() {\n     console.log(`https://qrdee.co/api/v1/order`);\n    return this.http.get<any>(`https://qrdee.co/api/v1/order`);\n\n  }\n orderProducts() {\n     console.log(`https://qrdee.co/api/v1/orders`);\n    return this.http.get<any>(`https://qrdee.co/api/v1/orders`);\n\n  }\n\n\ngetUser() {\n    return this.http.get<any>(`https://qrdee.co/api/v1/users`);\n    // console.log('https://qrdee.co/api/v1/users');\n  }\n\n getCodeRandoms() {\n    return this.http.get<any>(`https://qrdee.co/api/v1/code_randomss`);\n    // console.log('https://qrdee.co/api/v1/users');      store_id\n  }\n\n  newTransaction(products, total_price,latitude,longitude,firstname,lastname,mobile_number,latitude_store,longitude_store,store_id,promptpay,verified) {\n    const body = {\n      total_price: total_price,\n      products: products,\n      latitude: latitude,\n      longitude: longitude,\n      firstname: firstname,\n      lastname: lastname,\n      mobile_number: mobile_number,\n      latitude_store: latitude_store,\n      longitude_store: longitude_store,\n      store_id: store_id,\n      promptpay:promptpay,\n      verified:verified,\n    }\n    console.log(body);\n\n    return this.http.post<any>(`${this.baseUrl}/new_transaction`,body);\n  }\n\n  newTransactionStore(products, total_price,verified) {\n    const bodystore = {\n      total_price: total_price,\n      products: products,\n      verified:verified,\n    }\n    console.log(bodystore);\n    return this.http.post<any>(`https://qrdee.co/api/v1/new_transactionstore`,bodystore);\n  }\n\n\n getverifiedcart(id) {\n\n\n    return this.http.get<any>(`https://qrdee.co/api/v1/verified_transactionstore/${id}`);\n  }\n\n\nverifiedcart(verified) {\n    const bodystoreverified = {\n      verified:verified,\n    }\n    console.log('verified',bodystoreverified);\n\n    return this.http.post<any>(`https://qrdee.co/api/v1/verified_transactionstores`,bodystoreverified);\n  }\n\n\n\n\nnewTransactionOrder(firstname, lastname,mobile_number,store_id,code_randoms) {\n    const bodystorder = {\n      firstname: firstname,\n      lastname: lastname,\n      mobile_number: mobile_number,\n      store_id: store_id,\n      code_randoms:code_randoms,\n    }\n    console.log(bodystorder);\n\n    return this.http.post<any>(`https://qrdee.co/api/v1/transaction_order_input`,bodystorder);\n  }\n\n\n  verifyTransaction(transaction) {\n    // console.log(transaction);\n    return this.http.post<any>(`${this.baseUrl}/verify_transaction`, transaction);\n  }\n\nverifyTransactions(transaction) {\n    // console.log(transaction);\n    return this.http.post<any>(`${this.baseUrl}/verify_transactions`, transaction);\n  }\n\n\n// postUser(firstname,lastname) {\n//     const name = {\n//       firstname: firstname,\n//       lastname: lastname\n//     }\n//     console.log(name);\n//     return this.http.post<any>(`https://qrdee.co/api/v1/users_post`,name);\n//     // console.log('https://qrdee.co/api/v1/users');\n//   }\n\n  //  update_transaction(transaction) {\n  //   console.log(transaction);\n  //   return this.http.post<any>(`${this.baseUrl}/update_transaction`, transaction);\n  // }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\n// import { QRCodeModule } from 'angularx-qrcode';\n\nimport { HttpClientInterceptor } from './interceptors/httpclient.interceptor';\nimport { ToastService } from './services/toast.service';\nimport { TransactionService } from './services/transaction.service';\nimport { AlertService } from './services/alert.service';\nimport { QrService } from './services/qr.service';\n\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    // QRCodeModule,\n    HttpClientModule\n  ],\n  providers: [\n    ToastService,\n    TransactionService,\n    AlertService,\n    QrService,\n    { provide: HTTP_INTERCEPTORS, useClass: HttpClientInterceptor, multi: true }\n  ],\n  exports: [\n    ReactiveFormsModule\n  ]\n})\nexport class SharedModule { }\n"],"sourceRoot":""}